PROJET VV HCC/NPE
Planchais Christophe, Benkebir Chakib et Youssouf Roudani
2017/2018




CE QUE NOTRE PROGRAMME FAIT :
→il imprime clairement des données sur l’AST sous la forme suivante « @@ » ; grâce à une lecture du code source des classes et interfaces.
 j=10;@@ CtAssignmentImpl CtVariableWriteImpl-j CtLiteralImpl-10
→ il construit efficacement toutes les classes nécessaires (production automatique de code java par). Ainsi, le wrapping des classes est efficace : il suffit de surcharger les constructeurs des classes X_CtImpl.java pour que le code réagisse à un événement particulier. 
→ il construit des filtres (c.f. Filter2.java) qui permet également au code de réagir  à un événement particulier  
→ Il construit des méta nœuds nécessaires au traitement des scopes de variables.

CE QU’IL POURRAIT FAIRE : 
→faire en sorte que les meta nœuds (flot de contrôle) soient créés lors d’appel de fonctions ou de constructeurs.
→ainsi notre programme serait prêt à détecter les NPE de façon rigoureuse

 DEMARRAGE
→ Classe  PackageAnalysis.java
	public static void main(String[] args) {
		PackageAnalysis a = new PackageAnalysis(
				"/home/kristof/NPE/");
→ Le path doit correspondre à un dossier.
→ Les classes et interfaces des sous-répertoires doivent être correctement « packagées ». C’est à dire que la classe du chemin « NPE/NPEPACK/NPEPACK2/Tri.java »
doit obligatoirement déclarer son package : « package NPE.NPEPACK.NPEPACK2; »
